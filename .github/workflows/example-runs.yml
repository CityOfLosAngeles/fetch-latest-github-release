name: Example Runs & CI Tests

on:
  push:
  workflow_dispatch:

jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: fetch-latest-github-release
        uses: ./

      - name: print out latest release tag
        run: echo "The latest release tag is $TAG"
        env:
          TAG: ${{ steps.fetch-latest-github-release.outputs.tag_name }}
  customRepoExample:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: fetch-latest-github-release
        uses: ./
        with:
          github_token: ${{ github.token }}
          repo_path: actions/runner

      - name: print out latest release tag
        run: echo "The latest release tag is $TAG"
        env:
          TAG: ${{ steps.fetch-latest-github-release.outputs.tag_name }}
  JestTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Application Tests
        run: npm test
        # needed so we force the tests to run in test mode as if we did not have it, it detects it's inside github actions and runs as if in production.
        env:
          NODE_ENV: test
